How did viewing a diff between two versions of a file help you see the bug that
was introduced?
 
>>> so I can find any typo error for example, or the wrong name or number.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

>>> as I can review the changes I have made, and compare the new version with the old one and see >>> the differances.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in 
Git, vs having versions automatically saved, like Google
docs does?

>>> I think that manually saveing is better as I save when I want to save, beside, automatically >>> saveing might save uncompiled code.

Why do you think some version control systems, like Git, allow saving multiple 
files in one commit,
while others, like Google Docs, treat each file separately?

>>> As I might want to track multiple files together if, for example, I wanted to track changes to 
>>> the photoshop file along with the actual photo.
>>> while if the photos were unrelated, I would want to track them separately. 

How can you use the commands git log and git diff to view the history of files?

>>> I can review and compare between the commits of files and see the changes I have made to the >>> files.

How might using version control make you more confident to make changes 
that could break something?

>>> becouse if something goes wrong I can go back to the previous version.

Now that you have your workspace set up, what do you want to try using Git for?

>>> I want to make a new repository.
